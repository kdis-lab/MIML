<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="679px" preserveAspectRatio="none" style="width:1717px;height:679px;background:#FFFFFF;" version="1.1" viewBox="0 0 1717 679" width="1717px" zoomAndPan="magnify"><defs/><g><!--MD5=[e065395ac1679d6af8a6799951fb35aa]
cluster miml.classifiers.miml.neural--><g id="cluster_miml.classifiers.miml.neural"><path d="M8.5,236 L202.5,236 A3.75,3.75 0 0 1 205,238.5 L212,259.6094 L1707.5,259.6094 A2.5,2.5 0 0 1 1710,262.1094 L1710,650.5 A2.5,2.5 0 0 1 1707.5,653 L8.5,653 A2.5,2.5 0 0 1 6,650.5 L6,238.5 A2.5,2.5 0 0 1 8.5,236 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="212" y1="259.6094" y2="259.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="193" x="10" y="252.5332">miml.classifiers.miml.neural</text></g><!--MD5=[5ea508e6e8d0b42a39d8ea5f6e56fa35]
cluster miml.classifiers.miml--><g id="cluster_miml.classifiers.miml"><path d="M572.5,6 L717.5,6 A3.75,3.75 0 0 1 720,8.5 L727,29.6094 L1143.5,29.6094 A2.5,2.5 0 0 1 1146,32.1094 L1146,209.5 A2.5,2.5 0 0 1 1143.5,212 L572.5,212 A2.5,2.5 0 0 1 570,209.5 L570,8.5 A2.5,2.5 0 0 1 572.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="570" x2="727" y1="29.6094" y2="29.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="144" x="574" y="22.5332">miml.classifiers.miml</text></g><!--MD5=[f4fde286b3ee4a09a611a388574c5ca0]
class miml.classifiers.miml.neural.EnMIMLNNmetric--><a href="EnMIMLNNmetric.html" target="_top" title="EnMIMLNNmetric.html" xlink:actuate="onRequest" xlink:href="EnMIMLNNmetric.html" xlink:show="new" xlink:title="EnMIMLNNmetric.html" xlink:type="simple"><g id="elem_miml.classifiers.miml.neural.EnMIMLNNmetric"><rect codeLine="3" fill="#F1F1F1" height="364.9688" id="miml.classifiers.miml.neural.EnMIMLNNmetric" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="534" x="1160" y="272"/><ellipse cx="1369.75" cy="288" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1372.5156,283.875 Q1372.6719,283.6563 1372.8594,283.5469 Q1373.0469,283.4375 1373.2656,283.4375 Q1373.6406,283.4375 1373.875,283.7031 Q1374.1094,283.9531 1374.1094,284.5625 L1374.1094,286.0156 Q1374.1094,286.625 1373.875,286.8906 Q1373.6406,287.1563 1373.2656,287.1563 Q1372.9219,287.1563 1372.7188,286.9531 Q1372.5156,286.7656 1372.4063,286.25 Q1372.3594,285.8906 1372.1719,285.7031 Q1371.8438,285.3281 1371.2344,285.1094 Q1370.625,284.8906 1370,284.8906 Q1369.2344,284.8906 1368.5938,285.2188 Q1367.9688,285.5469 1367.4688,286.2969 Q1366.9844,287.0469 1366.9844,288.0781 L1366.9844,289.1719 Q1366.9844,290.4063 1367.875,291.2344 Q1368.7656,292.0469 1370.3594,292.0469 Q1371.2969,292.0469 1371.9531,291.7969 Q1372.3438,291.6406 1372.7656,291.2031 Q1373.0313,290.9375 1373.1719,290.8594 Q1373.3281,290.7813 1373.5313,290.7813 Q1373.8594,290.7813 1374.1094,291.0469 Q1374.375,291.2969 1374.375,291.6406 Q1374.375,291.9844 1374.0313,292.3906 Q1373.5313,292.9688 1372.7344,293.2969 Q1371.6563,293.75 1370.3594,293.75 Q1368.8438,293.75 1367.6406,293.125 Q1366.6563,292.625 1365.9688,291.5625 Q1365.2813,290.4844 1365.2813,289.2031 L1365.2813,288.0469 Q1365.2813,286.7188 1365.8906,285.5781 Q1366.5156,284.4219 1367.6094,283.8125 Q1368.7031,283.1875 1369.9375,283.1875 Q1370.6719,283.1875 1371.3125,283.3594 Q1371.9688,283.5156 1372.5156,283.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1390.25" y="293.7285">EnMIMLNNmetric</text><line style="stroke:#181818;stroke-width:0.5;" x1="1161" x2="1693" y1="304" y2="304"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1168" y="315.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="1180" y="322.5332">serialVersionUID: long</text><polygon fill="none" points="1171,331.9141,1167,337.9141,1175,337.9141" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="198" x="1180" y="340.1426">enmimlnn: MWEnMIMLNNmetric</text><polygon fill="none" points="1171,349.5234,1167,355.5234,1175,355.5234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="1180" y="357.752">ratio: double</text><polygon fill="none" points="1171,367.1328,1167,373.1328,1175,373.1328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="1180" y="375.3613">mu: double</text><polygon fill="none" points="1171,384.7422,1167,390.7422,1175,390.7422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="1180" y="392.9707">seed: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="1161" x2="1693" y1="400.0469" y2="400.0469"/><ellipse cx="1171" cy="414.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1180" y="418.5801">EnMIMLNNmetric()</text><ellipse cx="1171" cy="431.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="1180" y="436.1895">EnMIMLNNmetric(double, double)</text><ellipse cx="1171" cy="449.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="1180" y="453.7988">EnMIMLNNmetric(double, double, int)</text><ellipse cx="1171" cy="467.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="1180" y="471.4082">dispose(): void</text><ellipse cx="1171" cy="484.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="1180" y="489.0176">getRatio(): double</text><ellipse cx="1171" cy="502.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="1180" y="506.627">setRatio(double): void</text><ellipse cx="1171" cy="520.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="1180" y="524.2363">getMu(): double</text><ellipse cx="1171" cy="537.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1180" y="541.8457">setMu(double): void</text><ellipse cx="1171" cy="555.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="1180" y="559.4551">getSeed(): int</text><ellipse cx="1171" cy="572.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="1180" y="577.0645">setSeed(int): void</text><ellipse cx="1171" cy="590.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="1180" y="594.6738">configure(Configuration): void</text><polygon fill="#FFFF44" points="1171,603.0547,1175,607.0547,1171,611.0547,1167,607.0547" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="353" x="1180" y="612.2832">trainMWClassifier(MWCellArray, MWNumericArray): void</text><polygon fill="#FFFF44" points="1171,620.6641,1175,624.6641,1171,628.6641,1167,624.6641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="508" x="1180" y="629.8926">predictMWClassifier(MWCellArray, MWNumericArray, MWNumericArray): Object[]</text></g></a><!--MD5=[f25d8a4a93adda1d9f2814a7d26acd2c]
class miml.classifiers.miml.neural.MIMLNN--><a href="MIMLNN.html" target="_top" title="MIMLNN.html" xlink:actuate="onRequest" xlink:href="MIMLNN.html" xlink:show="new" xlink:title="MIMLNN.html" xlink:type="simple"><g id="elem_miml.classifiers.miml.neural.MIMLNN"><rect codeLine="24" fill="#F1F1F1" height="364.9688" id="miml.classifiers.miml.neural.MIMLNN" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="534" x="591" y="272"/><ellipse cx="828.25" cy="288" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M831.0156,283.875 Q831.1719,283.6563 831.3594,283.5469 Q831.5469,283.4375 831.7656,283.4375 Q832.1406,283.4375 832.375,283.7031 Q832.6094,283.9531 832.6094,284.5625 L832.6094,286.0156 Q832.6094,286.625 832.375,286.8906 Q832.1406,287.1563 831.7656,287.1563 Q831.4219,287.1563 831.2188,286.9531 Q831.0156,286.7656 830.9063,286.25 Q830.8594,285.8906 830.6719,285.7031 Q830.3438,285.3281 829.7344,285.1094 Q829.125,284.8906 828.5,284.8906 Q827.7344,284.8906 827.0938,285.2188 Q826.4688,285.5469 825.9688,286.2969 Q825.4844,287.0469 825.4844,288.0781 L825.4844,289.1719 Q825.4844,290.4063 826.375,291.2344 Q827.2656,292.0469 828.8594,292.0469 Q829.7969,292.0469 830.4531,291.7969 Q830.8438,291.6406 831.2656,291.2031 Q831.5313,290.9375 831.6719,290.8594 Q831.8281,290.7813 832.0313,290.7813 Q832.3594,290.7813 832.6094,291.0469 Q832.875,291.2969 832.875,291.6406 Q832.875,291.9844 832.5313,292.3906 Q832.0313,292.9688 831.2344,293.2969 Q830.1563,293.75 828.8594,293.75 Q827.3438,293.75 826.1406,293.125 Q825.1563,292.625 824.4688,291.5625 Q823.7813,290.4844 823.7813,289.2031 L823.7813,288.0469 Q823.7813,286.7188 824.3906,285.5781 Q825.0156,284.4219 826.1094,283.8125 Q827.2031,283.1875 828.4375,283.1875 Q829.1719,283.1875 829.8125,283.3594 Q830.4688,283.5156 831.0156,283.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="848.75" y="293.7285">MIMLNN</text><line style="stroke:#181818;stroke-width:0.5;" x1="592" x2="1124" y1="304" y2="304"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="599" y="315.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="611" y="322.5332">serialVersionUID: long</text><polygon fill="none" points="602,331.9141,598,337.9141,606,337.9141" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="127" x="611" y="340.1426">mimlnn: MWMIMLNN</text><polygon fill="none" points="602,349.5234,598,355.5234,606,355.5234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="611" y="357.752">ratio: double</text><polygon fill="none" points="602,367.1328,598,373.1328,606,373.1328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="611" y="375.3613">lambda: double</text><polygon fill="none" points="602,384.7422,598,390.7422,606,390.7422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="611" y="392.9707">seed: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="592" x2="1124" y1="400.0469" y2="400.0469"/><ellipse cx="602" cy="414.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="611" y="418.5801">MIMLNN()</text><ellipse cx="602" cy="431.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="611" y="436.1895">MIMLNN(double, double)</text><ellipse cx="602" cy="449.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="611" y="453.7988">MIMLNN(double, double, int)</text><ellipse cx="602" cy="467.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="611" y="471.4082">dispose(): void</text><ellipse cx="602" cy="484.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="611" y="489.0176">getSeed(): int</text><ellipse cx="602" cy="502.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="611" y="506.627">setSeed(int): void</text><ellipse cx="602" cy="520.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="611" y="524.2363">getRatio(): double</text><ellipse cx="602" cy="537.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="611" y="541.8457">setRatio(double): void</text><ellipse cx="602" cy="555.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="611" y="559.4551">getLambda(): double</text><ellipse cx="602" cy="572.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="611" y="577.0645">setLambda(double): void</text><ellipse cx="602" cy="590.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="611" y="594.6738">configure(Configuration): void</text><polygon fill="#FFFF44" points="602,603.0547,606,607.0547,602,611.0547,598,607.0547" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="353" x="611" y="612.2832">trainMWClassifier(MWCellArray, MWNumericArray): void</text><polygon fill="#FFFF44" points="602,620.6641,606,624.6641,602,628.6641,598,624.6641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="508" x="611" y="629.8926">predictMWClassifier(MWCellArray, MWNumericArray, MWNumericArray): Object[]</text></g></a><!--MD5=[2f7d5de45c5e98a62e9ba73c0ffbdf01]
class miml.classifiers.miml.neural.MIMLRBF--><a href="MIMLRBF.html" target="_top" title="MIMLRBF.html" xlink:actuate="onRequest" xlink:href="MIMLRBF.html" xlink:show="new" xlink:title="MIMLRBF.html" xlink:type="simple"><g id="elem_miml.classifiers.miml.neural.MIMLRBF"><rect codeLine="45" fill="#F1F1F1" height="364.9688" id="miml.classifiers.miml.neural.MIMLRBF" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="534" x="22" y="272"/><ellipse cx="254.25" cy="288" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M257.0156,283.875 Q257.1719,283.6563 257.3594,283.5469 Q257.5469,283.4375 257.7656,283.4375 Q258.1406,283.4375 258.375,283.7031 Q258.6094,283.9531 258.6094,284.5625 L258.6094,286.0156 Q258.6094,286.625 258.375,286.8906 Q258.1406,287.1563 257.7656,287.1563 Q257.4219,287.1563 257.2188,286.9531 Q257.0156,286.7656 256.9063,286.25 Q256.8594,285.8906 256.6719,285.7031 Q256.3438,285.3281 255.7344,285.1094 Q255.125,284.8906 254.5,284.8906 Q253.7344,284.8906 253.0938,285.2188 Q252.4688,285.5469 251.9688,286.2969 Q251.4844,287.0469 251.4844,288.0781 L251.4844,289.1719 Q251.4844,290.4063 252.375,291.2344 Q253.2656,292.0469 254.8594,292.0469 Q255.7969,292.0469 256.4531,291.7969 Q256.8438,291.6406 257.2656,291.2031 Q257.5313,290.9375 257.6719,290.8594 Q257.8281,290.7813 258.0313,290.7813 Q258.3594,290.7813 258.6094,291.0469 Q258.875,291.2969 258.875,291.6406 Q258.875,291.9844 258.5313,292.3906 Q258.0313,292.9688 257.2344,293.2969 Q256.1563,293.75 254.8594,293.75 Q253.3438,293.75 252.1406,293.125 Q251.1563,292.625 250.4688,291.5625 Q249.7813,290.4844 249.7813,289.2031 L249.7813,288.0469 Q249.7813,286.7188 250.3906,285.5781 Q251.0156,284.4219 252.1094,283.8125 Q253.2031,283.1875 254.4375,283.1875 Q255.1719,283.1875 255.8125,283.3594 Q256.4688,283.5156 257.0156,283.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="274.75" y="293.7285">MIMLRBF</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="555" y1="304" y2="304"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="30" y="315.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="42" y="322.5332">serialVersionUID: long</text><polygon fill="none" points="33,331.9141,29,337.9141,37,337.9141" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="138" x="42" y="340.1426">mimlrbf: MWMIMLRBF</text><polygon fill="none" points="33,349.5234,29,355.5234,37,355.5234" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="42" y="357.752">ratio: double</text><polygon fill="none" points="33,367.1328,29,373.1328,37,373.1328" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="42" y="375.3613">mu: double</text><polygon fill="none" points="33,384.7422,29,390.7422,37,390.7422" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="42" y="392.9707">seed: int</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="555" y1="400.0469" y2="400.0469"/><ellipse cx="33" cy="414.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="42" y="418.5801">MIMLRBF()</text><ellipse cx="33" cy="431.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="42" y="436.1895">MIMLRBF(double, double)</text><ellipse cx="33" cy="449.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="42" y="453.7988">MIMLRBF(double, double, int)</text><ellipse cx="33" cy="467.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="42" y="471.4082">dispose(): void</text><ellipse cx="33" cy="484.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="42" y="489.0176">getRatio(): double</text><ellipse cx="33" cy="502.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="42" y="506.627">setRatio(double): void</text><ellipse cx="33" cy="520.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="42" y="524.2363">getMu(): double</text><ellipse cx="33" cy="537.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="42" y="541.8457">setMu(double): void</text><ellipse cx="33" cy="555.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="42" y="559.4551">getSeed(): int</text><ellipse cx="33" cy="572.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="42" y="577.0645">setSeed(int): void</text><ellipse cx="33" cy="590.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="42" y="594.6738">configure(Configuration): void</text><polygon fill="#FFFF44" points="33,603.0547,37,607.0547,33,611.0547,29,607.0547" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="353" x="42" y="612.2832">trainMWClassifier(MWCellArray, MWNumericArray): void</text><polygon fill="#FFFF44" points="33,620.6641,37,624.6641,33,628.6641,29,624.6641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="508" x="42" y="629.8926">predictMWClassifier(MWCellArray, MWNumericArray, MWNumericArray): Object[]</text></g></a><!--MD5=[a73d7e6ec4fa7ef9a44f222a19844101]
class miml.classifiers.miml.MWClassifier--><a href="..\MWClassifier.html" target="_top" title="..\MWClassifier.html" xlink:actuate="onRequest" xlink:href="..\MWClassifier.html" xlink:show="new" xlink:title="..\MWClassifier.html" xlink:type="simple"><g id="elem_miml.classifiers.miml.MWClassifier"><rect codeLine="72" fill="#F1F1F1" height="153.6563" id="miml.classifiers.miml.MWClassifier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="544" x="586" y="42"/><ellipse cx="811.75" cy="58" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M813.9375,59.7656 L809.7969,59.7656 L809.375,60.7969 L809.7969,60.7969 Q810.4063,60.7969 810.6719,61.0313 Q810.9375,61.2656 810.9375,61.6563 Q810.9375,62.0313 810.6719,62.2656 Q810.4063,62.5 809.7969,62.5 L807.5,62.5 Q806.8906,62.5 806.6406,62.2656 Q806.375,62.0313 806.375,61.6406 Q806.375,61.2656 806.6563,61.0313 Q806.9219,60.7813 807.5469,60.7969 L810.2188,54.1406 L809.1094,54.1406 Q808.5,54.1406 808.2344,53.9063 Q807.9688,53.6719 807.9688,53.2813 Q807.9688,52.9063 808.2344,52.6719 Q808.5,52.4375 809.1094,52.4375 L812.7813,52.4375 L816.1719,60.7969 Q816.7656,60.7969 816.9531,60.9375 Q817.3438,61.2031 817.3438,61.6563 Q817.3438,62.0313 817.0781,62.2656 Q816.8281,62.5 816.2188,62.5 L813.9219,62.5 Q813.3125,62.5 813.0469,62.2656 Q812.7813,62.0313 812.7813,61.6406 Q812.7813,61.2656 813.0469,61.0313 Q813.3125,60.7969 813.9219,60.7969 L814.3438,60.7969 L813.9375,59.7656 Z M813.2188,58.0625 L811.8594,54.6875 L810.4844,58.0625 L813.2188,58.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="84" x="832.25" y="63.7285">MWClassifier</text><line style="stroke:#181818;stroke-width:0.5;" x1="587" x2="1129" y1="74" y2="74"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="594" y="85.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="606" y="92.5332">serialVersionUID: long</text><polygon fill="none" points="597,100.9141,601,104.9141,597,108.9141,593,104.9141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="606" y="110.1426">wrapper: MWTranslator</text><polygon fill="none" points="597,118.5234,601,122.5234,597,126.5234,593,122.5234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="606" y="127.752">classifier: Object[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="587" x2="1129" y1="134.8281" y2="134.8281"/><polygon fill="#FFFF44" points="597,144.1328,601,148.1328,597,152.1328,593,148.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="359" x="606" y="153.3613">trainMWClassifier(MWCellArray, MWNumericArray): void</text><polygon fill="#FFFF44" points="597,161.7422,601,165.7422,597,169.7422,593,165.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="518" x="606" y="170.9707">predictMWClassifier(MWCellArray, MWNumericArray, MWNumericArray): Object[]</text><ellipse cx="597" cy="184.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="92" x="606" y="188.5801">dispose(): void</text></g></a><!--MD5=[0ca9dc072decb245760342f467bdda6f]
reverse link miml.classifiers.miml.MWClassifier to miml.classifiers.miml.neural.EnMIMLNNmetric--><g id="link_miml.classifiers.miml.MWClassifier_miml.classifiers.miml.neural.EnMIMLNNmetric"><path codeLine="66" d="M1097.76,204.54 C1113.32,211.95 1128.53,219.78 1143,228 C1166.13,241.14 1189.36,256.08 1212.02,271.88 " fill="none" id="miml.classifiers.miml.MWClassifier-backto-miml.classifiers.miml.neural.EnMIMLNNmetric" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1094.58,210.78,1079.37,196.03,1100.46,198.07,1094.58,210.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[73dfbff758f7351c4ca6883c15418822]
reverse link miml.classifiers.miml.MWClassifier to miml.classifiers.miml.neural.MIMLNN--><g id="link_miml.classifiers.miml.MWClassifier_miml.classifiers.miml.neural.MIMLNN"><path codeLine="67" d="M858,216.11 C858,233.72 858,252.62 858,271.78 " fill="none" id="miml.classifiers.miml.MWClassifier-backto-miml.classifiers.miml.neural.MIMLNN" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="851,216.09,858,196.09,865,216.09,851,216.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0ddf5827a06f87a64aa32d03f91670d2]
reverse link miml.classifiers.miml.MWClassifier to miml.classifiers.miml.neural.MIMLRBF--><g id="link_miml.classifiers.miml.MWClassifier_miml.classifiers.miml.neural.MIMLRBF"><path codeLine="68" d="M619.1,204.61 C603.59,212 588.42,219.81 574,228 C550.82,241.16 527.53,256.12 504.79,271.93 " fill="none" id="miml.classifiers.miml.MWClassifier-backto-miml.classifiers.miml.neural.MIMLRBF" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="616.35,198.17,637.44,196.12,622.23,210.87,616.35,198.17" style="stroke:#181818;stroke-width:1.0;"/></g><rect fill="none" height="12.5781" style="stroke:none;stroke-width:1.0;" width="190" x="756.5" y="659"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="190" x="756.5" y="669.3809">UMLDoclet 2.0.20, PlantUML 1.2022.12</text><!--MD5=[beaee68ff9f22259b0a0456174766076]
@startuml
    namespace miml.classifiers.miml.neural {

        class EnMIMLNNmetric [[EnMIMLNNmetric.html]] {
            {static} -serialVersionUID: long
            {static} ~enmimlnn: MWEnMIMLNNmetric
            ~ratio: double
            ~mu: double
            ~seed: int
            +EnMIMLNNmetric()
            +EnMIMLNNmetric(double, double)
            +EnMIMLNNmetric(double, double, int)
            +dispose(): void
            +getRatio(): double
            +setRatio(double): void
            +getMu(): double
            +setMu(double): void
            +getSeed(): int
            +setSeed(int): void
            +configure(Configuration): void
            #trainMWClassifier(MWCellArray, MWNumericArray): void
            #predictMWClassifier(MWCellArray, MWNumericArray, MWNumericArray): Object[]
        }

        class MIMLNN [[MIMLNN.html]] {
            {static} -serialVersionUID: long
            {static} ~mimlnn: MWMIMLNN
            ~ratio: double
            ~lambda: double
            ~seed: int
            +MIMLNN()
            +MIMLNN(double, double)
            +MIMLNN(double, double, int)
            +dispose(): void
            +getSeed(): int
            +setSeed(int): void
            +getRatio(): double
            +setRatio(double): void
            +getLambda(): double
            +setLambda(double): void
            +configure(Configuration): void
            #trainMWClassifier(MWCellArray, MWNumericArray): void
            #predictMWClassifier(MWCellArray, MWNumericArray, MWNumericArray): Object[]
        }

        class MIMLRBF [[MIMLRBF.html]] {
            {static} -serialVersionUID: long
            {static} ~mimlrbf: MWMIMLRBF
            ~ratio: double
            ~mu: double
            ~seed: int
            +MIMLRBF()
            +MIMLRBF(double, double)
            +MIMLRBF(double, double, int)
            +dispose(): void
            +getRatio(): double
            +setRatio(double): void
            +getMu(): double
            +setMu(double): void
            +getSeed(): int
            +setSeed(int): void
            +configure(Configuration): void
            #trainMWClassifier(MWCellArray, MWNumericArray): void
            #predictMWClassifier(MWCellArray, MWNumericArray, MWNumericArray): Object[]
        }

        miml.classifiers.miml.MWClassifier <|- - EnMIMLNNmetric
        miml.classifiers.miml.MWClassifier <|- - MIMLNN
        miml.classifiers.miml.MWClassifier <|- - MIMLRBF
    }

    namespace miml.classifiers.miml {
        abstract class MWClassifier [[..\MWClassifier.html]] {
            {static} -serialVersionUID: long
            #wrapper: MWTranslator
            #classifier: Object[]
            {abstract} #trainMWClassifier(MWCellArray, MWNumericArray): void
            {abstract} #predictMWClassifier(MWCellArray, MWNumericArray, MWNumericArray): Object[]
            {abstract} +dispose(): void
        }
    }

    center footer UMLDoclet 2.0.20, PlantUML 1.2022.12
@enduml

PlantUML version 1.2022.12(Sun Oct 23 20:12:26 CEST 2022)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: es
Country: ES
--></g></svg>